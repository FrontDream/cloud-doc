[{"/Users/qiandingwei/Documents/projects/cloud-doc/src/index.js":"1","/Users/qiandingwei/Documents/projects/cloud-doc/src/reportWebVitals.js":"2","/Users/qiandingwei/Documents/projects/cloud-doc/src/App.js":"3","/Users/qiandingwei/Documents/projects/cloud-doc/src/components/index.js":"4","/Users/qiandingwei/Documents/projects/cloud-doc/src/components/FileSearch/index.js":"5","/Users/qiandingwei/Documents/projects/cloud-doc/src/components/FileList/index.js":"6","/Users/qiandingwei/Documents/projects/cloud-doc/src/utils/defaultFiles.js":"7","/Users/qiandingwei/Documents/projects/cloud-doc/src/hooks/index.js":"8","/Users/qiandingwei/Documents/projects/cloud-doc/src/hooks/useKeyPress.js":"9","/Users/qiandingwei/Documents/projects/cloud-doc/src/components/BottomBtn/index.js":"10","/Users/qiandingwei/Documents/projects/cloud-doc/src/components/TabList/index.js":"11"},{"size":500,"mtime":1611046420345,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1611046420346,"results":"14","hashOfConfig":"13"},{"size":4542,"mtime":1611190131902,"results":"15","hashOfConfig":"13"},{"size":198,"mtime":1611123641891,"results":"16","hashOfConfig":"13"},{"size":2444,"mtime":1611190233942,"results":"17","hashOfConfig":"13"},{"size":4782,"mtime":1611189738657,"results":"18","hashOfConfig":"13"},{"size":512,"mtime":1569465024000,"results":"19","hashOfConfig":"13"},{"size":54,"mtime":1611112899295,"results":"20","hashOfConfig":"13"},{"size":745,"mtime":1611112859440,"results":"21","hashOfConfig":"13"},{"size":779,"mtime":1611144235201,"results":"22","hashOfConfig":"13"},{"size":2396,"mtime":1611130861205,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1tzup5n",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},"/Users/qiandingwei/Documents/projects/cloud-doc/src/index.js",[],["49","50"],"/Users/qiandingwei/Documents/projects/cloud-doc/src/reportWebVitals.js",[],"/Users/qiandingwei/Documents/projects/cloud-doc/src/App.js",["51"],"/Users/qiandingwei/Documents/projects/cloud-doc/src/components/index.js",[],"/Users/qiandingwei/Documents/projects/cloud-doc/src/components/FileSearch/index.js",[],"/Users/qiandingwei/Documents/projects/cloud-doc/src/components/FileList/index.js",["52"],"/Users/qiandingwei/Documents/projects/cloud-doc/src/utils/defaultFiles.js",[],"/Users/qiandingwei/Documents/projects/cloud-doc/src/hooks/index.js",[],"/Users/qiandingwei/Documents/projects/cloud-doc/src/hooks/useKeyPress.js",["53"],"import { useState, useEffect } from \"react\";\n\nconst useKeyPress = (targetKeyCode)=>{\n    const [keyPress,setKeyPress]= useState(false)\n    const keyDownHandler = ({keyCode})=>{\n        if(keyCode===targetKeyCode){\n            setKeyPress(true)\n        }\n    }\n    const keyUpHandler = ({keyCode}) =>{\n        if(keyCode===targetKeyCode){\n            setKeyPress(false)\n        }\n    }\n    useEffect(()=>{\n        document.addEventListener('keydown', keyDownHandler)\n        document.addEventListener('keyup', keyUpHandler)\n        return ()=>{\n            document.removeEventListener('keydown', keyDownHandler)\n            document.removeEventListener('keyup', keyUpHandler)\n        }\n    },[])\n    return keyPress\n}\n\nexport default useKeyPress","/Users/qiandingwei/Documents/projects/cloud-doc/src/components/BottomBtn/index.js",[],"/Users/qiandingwei/Documents/projects/cloud-doc/src/components/TabList/index.js",["54","55","56","57","58","59","60"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faEdit, faTimes, faTrash} from '@fortawesome/free-solid-svg-icons'\n\nimport PropTypes from 'prop-types'\nimport { useKeyPress } from '../../hooks'\nimport cls from 'classnames'\nimport './index.scss'\n\nconst TabList = ({ files, activeId,unsaveIds,onTabClick, onCloseTab}) =>{\n    return (\n        <ul\n            className=\"nav nav-pills tabList-x\"\n        >\n            {\n                files.map(file=>{\n                    const withUnsasvedMark = unsaveIds.includes(file.id)\n                    const fClassNames = cls({\n                        'nav-link': true,\n                        'active': file.id ===activeId,\n                        'withUnsave': withUnsasvedMark\n                    })\n                    return (\n                        <li\n                            className=\"nav-item\"\n                            key={file.id}\n                            onClick={(e)=>{\n                                e.preventDefault();\n                                onTabClick(file.id)\n                            }}\n                        >\n                            <a href=\"#\" className={fClassNames}>\n                                {file.title}\n                                <span\n                                    className=\"ml-2 close-icon\"\n                                    onClick={e=>{\n                                        e.stopPropagation()\n                                        onCloseTab(file.id)\n                                    }}\n                                >\n                                    <FontAwesomeIcon\n                                        icon={faTimes}\n                                    />\n                                </span>\n                                {\n                                    withUnsasvedMark && <span className=\"rounded-circle ml-2 unsaved-icon\"></span>\n                                }\n                            </a>\n                        </li>\n                    )\n                })\n            }\n        </ul>\n    )\n}\n\nTabList.propTypes = {\n    files: PropTypes.array,\n    activeId: PropTypes.string,\n    unsaveIds: PropTypes.array,\n    onTabClick: PropTypes.func,\n    onCloseTab: PropTypes.func\n}\n\nTabList.defaultProps = {\n    unsaveIds: []\n}\n\nexport default TabList",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":1,"column":27,"nodeType":"67","messageId":"68","endLine":1,"endColumn":36},{"ruleId":"69","severity":1,"message":"70","line":16,"column":5,"nodeType":"67","endLine":16,"endColumn":14,"suggestions":"71"},{"ruleId":"69","severity":1,"message":"72","line":22,"column":7,"nodeType":"73","endLine":22,"endColumn":9,"suggestions":"74"},{"ruleId":"65","severity":1,"message":"75","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"66","line":1,"column":27,"nodeType":"67","messageId":"68","endLine":1,"endColumn":36},{"ruleId":"65","severity":1,"message":"76","line":1,"column":38,"nodeType":"67","messageId":"68","endLine":1,"endColumn":44},{"ruleId":"65","severity":1,"message":"77","line":3,"column":9,"nodeType":"67","messageId":"68","endLine":3,"endColumn":15},{"ruleId":"65","severity":1,"message":"78","line":3,"column":26,"nodeType":"67","messageId":"68","endLine":3,"endColumn":33},{"ruleId":"65","severity":1,"message":"79","line":6,"column":10,"nodeType":"67","messageId":"68","endLine":6,"endColumn":21},{"ruleId":"80","severity":1,"message":"81","line":32,"column":29,"nodeType":"82","endLine":32,"endColumn":65},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setValue'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [enterPressed, editStatus, escPressed, files, onSaveEdit, value] as a second argument to the useEffect Hook.",["85"],"React Hook useEffect has missing dependencies: 'keyDownHandler' and 'keyUpHandler'. Either include them or remove the dependency array.","ArrayExpression",["86"],"'useState' is defined but never used.","'useRef' is defined but never used.","'faEdit' is defined but never used.","'faTrash' is defined but never used.","'useKeyPress' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},"Add dependencies array: [enterPressed, editStatus, escPressed, files, onSaveEdit, value]",{"range":"91","text":"92"},"Update the dependencies array to be: [keyDownHandler, keyUpHandler]",{"range":"93","text":"94"},[957,957],", [enterPressed, editStatus, escPressed, files, onSaveEdit, value]",[692,694],"[keyDownHandler, keyUpHandler]"]
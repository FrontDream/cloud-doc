[{"/Users/qiandingwei/Documents/projects/cloud-doc/src/index.js":"1","/Users/qiandingwei/Documents/projects/cloud-doc/src/reportWebVitals.js":"2","/Users/qiandingwei/Documents/projects/cloud-doc/src/App.js":"3","/Users/qiandingwei/Documents/projects/cloud-doc/src/components/index.js":"4","/Users/qiandingwei/Documents/projects/cloud-doc/src/components/FileSearch/index.js":"5","/Users/qiandingwei/Documents/projects/cloud-doc/src/components/FileList/index.js":"6","/Users/qiandingwei/Documents/projects/cloud-doc/src/utils/defaultFiles.js":"7","/Users/qiandingwei/Documents/projects/cloud-doc/src/hooks/index.js":"8","/Users/qiandingwei/Documents/projects/cloud-doc/src/hooks/useKeyPress.js":"9","/Users/qiandingwei/Documents/projects/cloud-doc/src/components/BottomBtn/index.js":"10","/Users/qiandingwei/Documents/projects/cloud-doc/src/components/TabList/index.js":"11","/Users/qiandingwei/Documents/projects/cloud-doc/src/utils/helper.js":"12","/Users/qiandingwei/Documents/projects/cloud-doc/src/utils/fileHelper.js":"13","/Users/qiandingwei/Documents/projects/cloud-doc/src/hooks/useContextMenu.js":"14","/Users/qiandingwei/Documents/projects/cloud-doc/src/hooks/useIpcRenderer.js":"15","/Users/qiandingwei/Documents/projects/cloud-doc/src/components/Loader/index.js":"16"},{"size":500,"mtime":1611046420345,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1611046420346,"results":"19","hashOfConfig":"18"},{"size":11079,"mtime":1612248566800,"results":"20","hashOfConfig":"18"},{"size":243,"mtime":1612238512003,"results":"21","hashOfConfig":"18"},{"size":2444,"mtime":1611190233942,"results":"22","hashOfConfig":"18"},{"size":6326,"mtime":1612090208741,"results":"23","hashOfConfig":"18"},{"size":512,"mtime":1569465024000,"results":"24","hashOfConfig":"25"},{"size":179,"mtime":1612093822520,"results":"26","hashOfConfig":"18"},{"size":745,"mtime":1611112859440,"results":"27","hashOfConfig":"18"},{"size":779,"mtime":1611144235201,"results":"28","hashOfConfig":"18"},{"size":2396,"mtime":1611130861205,"results":"29","hashOfConfig":"18"},{"size":645,"mtime":1612184536167,"results":"30","hashOfConfig":"18"},{"size":481,"mtime":1611213926859,"results":"31","hashOfConfig":"18"},{"size":814,"mtime":1612089974744,"results":"32","hashOfConfig":"18"},{"size":438,"mtime":1569465024000,"results":"33","hashOfConfig":"18"},{"size":342,"mtime":1612247292083,"results":"34","hashOfConfig":"18"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"wezo4s",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"n0innl",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"37"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"37"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"/Users/qiandingwei/Documents/projects/cloud-doc/src/index.js",[],["76","77"],"/Users/qiandingwei/Documents/projects/cloud-doc/src/reportWebVitals.js",[],"/Users/qiandingwei/Documents/projects/cloud-doc/src/App.js",["78","79"],"import React, { useState, useEffect } from \"react\";\nimport SimpleMDE from \"react-simplemde-editor\";\nimport { faPlus, faFileImport, faSave} from '@fortawesome/free-solid-svg-icons';\nimport { FileSearch, FileList, BottomBtn , TabList, Loader } from './components'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"easymde/dist/easymde.min.css\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { flattenArr, objToArr, timestampToString } from './utils/helper';\nimport fileHelper from './utils/fileHelper';\nimport { useIpcRenderer } from './hooks'\nimport './App.css';\n\nconst { join, basename, extname, dirname } = window.require('path')\n// remote 可以用于取mainProcess中的相关方法\nconst { remote, ipcRenderer }= window.require('electron')\nconst Store = window.require('electron-store');\n\n// const remote = electron.remote\nconst settingsStore = new Store({name: 'Settings'})\n\nconst qiniuConfigArr = ['accessKey', 'secretKey', 'bucketName', 'enableAutoSync']\n\nconst getAuthConfig = () => qiniuConfigArr.every(item=>!!settingsStore.get(item))\n\nconst fileStore = new Store({\n    name: 'cloudDoc'\n})\n\nconst saveFilesToStore = (files)=>{\n    const fileObjectStore = objToArr(files).reduce((result,file)=>{\n        const { id, path, title, createdAt, isSynced, updatedAt } = file\n        result[id] = {\n            id,\n            path,\n            title,\n            createdAt,\n            isSynced,\n            updatedAt\n        }\n        return result\n    },{})\n    fileStore.set('files', fileObjectStore)\n}\n\nfunction App() {\n    const [files, setFiles] = useState(fileStore.get('files') || {})\n    const [activeFileID, setActiveFileID] = useState('')\n    const [openedFileIDs, setOpenedFileIDs] = useState([])\n    const [unsavedFileIDs, setUnsavedFileIDs] = useState([])\n    const [searchedFiles, setSearchedFiles] = useState([])\n    const [ isLoading, setLoading ] = useState(false)\n\n    const openedFiles = openedFileIDs.map(id=>files[id])\n    const activeFile = files[activeFileID]\n    const filesArr = objToArr(files)\n    const fileListArr = searchedFiles.length>0?searchedFiles: filesArr\n    const savedLocation =settingsStore.get('savedFileLocation') || remote.app.getPath('documents')\n\n    const fileClick = (id)=>{\n        const currentFile = files[id]\n        setActiveFileID(id)\n        const { isLoaded, title, path } = currentFile\n        if(!isLoaded){\n            if(getAuthConfig()){\n                ipcRenderer.send('down-file', { key: `${title}.md`, id, path })\n            }else {\n                fileHelper.readFile(path).then(value=>{\n                    const newFile = { ...currentFile, body: value, isLoaded: true}\n                    setFiles({ ...files, [id]: newFile})\n                })\n            }\n        }\n        if(!openedFileIDs.includes(id)){\n            setOpenedFileIDs([...openedFileIDs,id])\n        }\n    }\n    const tabClick = (fileId)=>{\n        setActiveFileID(fileId)\n    }\n    const tabClose = (fileId)=>{\n        const tabRes = openedFileIDs.filter(id=>id!==fileId)\n        setOpenedFileIDs(tabRes)\n        if(tabRes.length>0){\n            setActiveFileID(tabRes[0])\n            return\n        }\n        setActiveFileID('')\n    }\n    const fileChange = (id, value)=>{\n        if(value!==files[id].body){\n            const newFile = {...files[id], body: value}\n            setFiles({...files,[id]:newFile})\n            if(!unsavedFileIDs.includes(id)){\n                setUnsavedFileIDs([...unsavedFileIDs,id])\n            }\n        }\n    }\n    const deleteFile = (id)=>{\n        if(files[id].isNew){\n            const { [id]: value, ...afterDelete }= files\n            setFiles(afterDelete)\n        }else {\n            fileHelper.deleteFile(files[id].path).then(()=>{\n                const { [id]: value, ...afterDelete }= files\n                setFiles(afterDelete)\n                saveFilesToStore(afterDelete)\n                tabClose(id)\n            })\n        }\n    }\n    const updateFileName = (id,title, isNew)=>{\n        const newPath =isNew? join(savedLocation,`${title}.md`): join(dirname(files[id].path), `${title}.md`)\n        const modifyFile = {...files[id], title,isNew:false, path: newPath}\n        const newFiles = {...files, [id]:modifyFile}\n        if(isNew){\n            // 新建的时候存储到本地\n            fileHelper.writeFile(newPath,files[id].body).then(()=>{\n                setFiles(newFiles)\n                saveFilesToStore(newFiles)\n            })\n        }else {\n            const oldPath = files[id].path\n            fileHelper.renameFile(oldPath,newPath).then(()=>{\n                setFiles(newFiles)\n                saveFilesToStore(newFiles)\n            })\n        }\n    }\n    const fileSearch = (keyword)=>{\n        const newFiles = filesArr.filter(file=>file.title.includes(keyword))\n        setSearchedFiles(newFiles)\n    }\n    const createNewFiles = ()=>{\n        const newId = uuidv4()\n        const newFile = {\n            id: newId,\n            title: '',\n            body: '## 请输入MarkDown',\n            createdAt: new Date().getTime(),\n            isNew: true\n        }\n        setFiles({...files,[newId]:newFile})\n    }\n    const saveCurrentFile = ()=>{\n        const {path, body, id, title} = activeFile\n        fileHelper.writeFile(path,body).then(()=>{\n            setUnsavedFileIDs(unsavedFileIDs.filter(fileId=>fileId!==id))\n            if(getAuthConfig()){\n                ipcRenderer.send('upload-file', { key: `${title}.md`, path })\n            }\n        })\n    }\n    const importFiles = () =>{\n        remote.dialog.showOpenDialog({\n            title: '请选择 MarkDown 文件',\n            properties: ['openFile','multiSelections'],\n            filters: [{ name: 'MarkDown', extensions: ['md'] }]\n        }).then(result=>{\n            if(Array.isArray(result.filePaths)){\n                const filterPath = result.filePaths.filter(path=>{\n                    const alreadyExist = Object.values(files).find(item=>item.path === path)\n                    return !alreadyExist\n                })\n                const importedFiles = filterPath.map(path=>{\n                    return {\n                        id: uuidv4(),\n                        title: basename(path, extname(path)),\n                        path\n                    }\n                })\n                const newFiles = {...files, ...flattenArr(importedFiles)}\n                setFiles(newFiles)\n                saveFilesToStore(newFiles)\n                if(newFiles.length>0){\n                    remote.dialog.showMessageBox({\n                        type: \"info\",\n                        message: `您成功的导入了${newFiles.length}个文件`\n                    })\n                }\n            }\n        })\n    }\n    const updateCurrentFile=()=>{\n        const { id } = activeFile\n        const modifyFile = {...files[id], isSynced: true, updatedAt: new Date().getTime()}\n        const updateFile = { ...files, [id]: modifyFile}\n        setFiles(updateFile)\n        saveFilesToStore(updateFile)\n    }\n    const fileServerUpdate = (event, message)=>{\n        // const { id, status } = data\n        const currentFile = files[message.id]\n        const { id ,path } = currentFile\n        fileHelper.readFile(path).then(value=>{\n            let newFile\n            if(message.status==='downloaded-success'){\n                newFile = { ...files[id], body: value, isLoaded: true, isSynced: true, updatedAt: new Date().getTime() }\n            }else{\n                newFile = { ...files[id], body: value, isLoaded: true }\n            }\n            const newFiles = {...files, [id]: newFile}\n            setFiles(newFiles)\n            saveFilesToStore(newFiles)\n        })\n\n    }\n    const filesUploaded=()=>{\n        const newFiles = objToArr(files).reduce((result, file) => {\n            const currentTime = new Date().getTime()\n            result[file.id] = {\n                ...files[file.id],\n                isSynced: true,\n                updatedAt: currentTime,\n            }\n            return result\n        }, {})\n        setFiles(newFiles)\n        saveFilesToStore(newFiles)\n    }\n    useIpcRenderer({\n        'create-new-file': createNewFiles,\n        'save-edit-file': saveCurrentFile,\n        'import-file': importFiles,\n        'active-file-uploaded': updateCurrentFile,\n        'file-downloaded': fileServerUpdate,\n        'files-uploaded': filesUploaded,\n        'loading-status': (message, status) => { setLoading(status) }\n    })\n  return (\n    <div className=\"App container-fluid px-0\">\n        { isLoading &&\n            <Loader />\n        }\n      <div className=\"row no-gutters\">\n        <div className=\"col-3 left-panel\">\n            <FileSearch\n                title={'我的云文档'}\n                onFileSearch={fileSearch}\n            />\n            <FileList\n                files={fileListArr}\n                onFileClick={fileClick}\n                onFileDelete={deleteFile}\n                onSaveEdit={updateFileName}\n            />\n            <div className='row no-gutters button-group'>\n                <div className={'col'}>\n                    <BottomBtn\n                        text={'新建'}\n                        colorClass=\"btn-primary\"\n                        icon={faPlus}\n                        onBtnClick={createNewFiles}\n                    />\n                </div>\n                <div className={'col'}>\n                    <BottomBtn\n                        text={'导入'}\n                        colorClass=\"btn-success\"\n                        icon={faFileImport}\n                        onBtnClick={importFiles}\n                    />\n                </div>\n            </div>\n        </div>\n          <div className=\"col-9 right-panel\">\n              {\n                  !activeFile && (\n                      <div className=\"start-page\">\n                          选择或者创建新的MarkDown文档\n                      </div>\n                  )\n              }\n              {\n                  activeFile && (\n                      <>\n                          <TabList\n                              files={openedFiles}\n                              onTabClick={tabClick}\n                              onCloseTab={tabClose}\n                              activeId={activeFileID}\n                              unsaveIds={unsavedFileIDs}\n                          />\n\n                          <SimpleMDE\n                              key={activeFile&&activeFile.id}\n                              value={activeFile&&activeFile.body}\n                              onChange={(value)=>{ fileChange(activeFile.id, value)}}\n                              options={{\n                                  minHeight: '515px'\n                              }}\n                          />\n                          { activeFile.isSynced &&\n                                <span className=\"sync-status\">已同步，上次同步{timestampToString(activeFile.updatedAt)}</span>\n                          }\n                      </>\n                  )\n              }\n          </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/qiandingwei/Documents/projects/cloud-doc/src/components/index.js",[],"/Users/qiandingwei/Documents/projects/cloud-doc/src/components/FileSearch/index.js",[],"/Users/qiandingwei/Documents/projects/cloud-doc/src/components/FileList/index.js",["80","81","82"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faEdit, faTimes, faTrash} from '@fortawesome/free-solid-svg-icons'\nimport { faMarkdown } from '@fortawesome/free-brands-svg-icons'\nimport PropTypes from 'prop-types'\nimport { useKeyPress, useContextMenu } from '../../hooks';\nimport { getParentNode } from '../../utils/helper'\nimport './index.css'\n\nconst FileList = ({ files, onFileClick,onFileDelete,onSaveEdit})=>{\n    let node = useRef(null)\n    const [value, setValue] = useState('')\n    const [editStatus, setEditStatus] =useState(false)\n    const enterPressed = useKeyPress(13)\n    const escPressed = useKeyPress(27)\n\n    const clickElement = useContextMenu([\n        {\n            label: '打开',\n            click:()=>{\n                const parentNode = getParentNode(clickElement.current,'file-item')\n                if(parentNode){\n                    onFileClick(parentNode.dataset.id)\n                }\n            }\n        },\n        {\n            label: '重命名',\n            click:()=>{\n                const parentNode = getParentNode(clickElement.current,'file-item')\n                if(parentNode){\n                    setEditStatus(parentNode.dataset.id);\n                    setValue(parentNode.dataset.title)\n                }\n            }\n        },\n        {\n            label: '删除',\n            click:()=>{\n                const parentNode = getParentNode(clickElement.current,'file-item')\n                if(parentNode){\n                    onFileDelete(parentNode.dataset.id)\n                }\n            }\n        },\n    ], '.file-list', [files])\n\n    useEffect(()=>{\n        const editItem = files.find(file=>file.id === editStatus)\n\n        if(enterPressed && editStatus && value.trim()!==''){\n            onSaveEdit(editItem.id,value,editItem.isNew)\n            setValue('')\n            setEditStatus(false)\n        }\n        if(escPressed && editStatus){\n            closeSearch(editItem)\n        }\n    })\n\n    useEffect(()=>{\n        const newFile = files.find(file=>file.isNew)\n        if(newFile){\n            setEditStatus(newFile.id)\n            setValue(newFile.title)\n        }\n    },[files])\n\n    const closeSearch = (editItem)=>{\n        setEditStatus(false)\n        if(editItem.isNew){\n            onFileDelete(editItem.id)\n        }\n    }\n    return (\n        <ul className=\"list-group list-group-flush file-list\">\n            {\n                files.map(file=>(\n                    <li\n                        className=\"list-group-item bg-light row d-flex align-items-center file-item mx-0\"\n                        key={file.id}\n                        data-id={file.id}\n                        data-title={file.title}\n                    >\n                        {\n                            (file.id !==editStatus && !file.isNew) && (\n                                <>\n                                    <span className=\"col-2\">\n                                        <FontAwesomeIcon icon={faMarkdown} size={'lg'}/>\n                                    </span>\n                                    <span className=\"col-10 c-link\" onClick={()=>onFileClick(file.id)}>{file.title}</span>\n                                    {/*<button*/}\n                                    {/*    type=\"button\"*/}\n                                    {/*    className=\"icon-button col-2\"*/}\n                                    {/*    onClick={()=>{*/}\n                                    {/*        setEditStatus(file.id);*/}\n                                    {/*        setValue(file.title)*/}\n                                    {/*    }}*/}\n                                    {/*>*/}\n                                    {/*    <FontAwesomeIcon*/}\n                                    {/*        title=\"编辑\"*/}\n                                    {/*        size=\"lg\"*/}\n                                    {/*        icon={faEdit}*/}\n                                    {/*    />*/}\n                                    {/*</button>*/}\n                                    {/*<button*/}\n                                    {/*    type=\"button\"*/}\n                                    {/*    className=\"icon-button col-2\"*/}\n                                    {/*    onClick={()=>{onFileDelete(file.id)}}*/}\n                                    {/*>*/}\n                                    {/*    <FontAwesomeIcon*/}\n                                    {/*        title=\"删除\"*/}\n                                    {/*        size=\"lg\"*/}\n                                    {/*        icon={faTrash}*/}\n                                    {/*    />*/}\n                                    {/*</button>*/}\n                                </>\n                            )\n                        }\n                        {\n                            (file.id === editStatus || file.isNew) &&(\n                                <>\n                                    <input\n                                        className=\"form-control col-10\"\n                                        ref={node}\n                                        value={value}\n                                        placeholder=\"请输入文件名称\"\n                                        onChange={(e) => { setValue(e.target.value) }}\n                                    />\n                                    <button\n                                        type=\"button\"\n                                        className=\"icon-button col-2\"\n                                        onClick={()=>closeSearch(file)}\n                                    >\n                                        <FontAwesomeIcon\n                                            title=\"关闭\"\n                                            size=\"lg\"\n                                            icon={faTimes}\n                                        />\n                                    </button>\n                                </>\n                            )\n                        }\n                    </li>\n                ))\n            }\n        </ul>\n    )\n}\n\nFileList.propTypes = {\n    files: PropTypes.array,\n    onFileClick: PropTypes.func,\n    onFileDelete: PropTypes.func,\n    onSaveEdit: PropTypes.func\n}\nexport default  FileList",["83","84"],"/Users/qiandingwei/Documents/projects/cloud-doc/src/utils/defaultFiles.js",[],["85","86"],"/Users/qiandingwei/Documents/projects/cloud-doc/src/hooks/index.js",[],"/Users/qiandingwei/Documents/projects/cloud-doc/src/hooks/useKeyPress.js",["87"],"import { useState, useEffect } from \"react\";\n\nconst useKeyPress = (targetKeyCode)=>{\n    const [keyPress,setKeyPress]= useState(false)\n    const keyDownHandler = ({keyCode})=>{\n        if(keyCode===targetKeyCode){\n            setKeyPress(true)\n        }\n    }\n    const keyUpHandler = ({keyCode}) =>{\n        if(keyCode===targetKeyCode){\n            setKeyPress(false)\n        }\n    }\n    useEffect(()=>{\n        document.addEventListener('keydown', keyDownHandler)\n        document.addEventListener('keyup', keyUpHandler)\n        return ()=>{\n            document.removeEventListener('keydown', keyDownHandler)\n            document.removeEventListener('keyup', keyUpHandler)\n        }\n    },[])\n    return keyPress\n}\n\nexport default useKeyPress","/Users/qiandingwei/Documents/projects/cloud-doc/src/components/BottomBtn/index.js",[],"/Users/qiandingwei/Documents/projects/cloud-doc/src/components/TabList/index.js",["88","89","90","91","92","93","94"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faEdit, faTimes, faTrash} from '@fortawesome/free-solid-svg-icons'\n\nimport PropTypes from 'prop-types'\nimport { useKeyPress } from '../../hooks'\nimport cls from 'classnames'\nimport './index.scss'\n\nconst TabList = ({ files, activeId,unsaveIds,onTabClick, onCloseTab}) =>{\n    return (\n        <ul\n            className=\"nav nav-pills tabList-x\"\n        >\n            {\n                files.map(file=>{\n                    const withUnsasvedMark = unsaveIds.includes(file.id)\n                    const fClassNames = cls({\n                        'nav-link': true,\n                        'active': file.id ===activeId,\n                        'withUnsave': withUnsasvedMark\n                    })\n                    return (\n                        <li\n                            className=\"nav-item\"\n                            key={file.id}\n                            onClick={(e)=>{\n                                e.preventDefault();\n                                onTabClick(file.id)\n                            }}\n                        >\n                            <a href=\"#\" className={fClassNames}>\n                                {file.title}\n                                <span\n                                    className=\"ml-2 close-icon\"\n                                    onClick={e=>{\n                                        e.stopPropagation()\n                                        onCloseTab(file.id)\n                                    }}\n                                >\n                                    <FontAwesomeIcon\n                                        icon={faTimes}\n                                    />\n                                </span>\n                                {\n                                    withUnsasvedMark && <span className=\"rounded-circle ml-2 unsaved-icon\"></span>\n                                }\n                            </a>\n                        </li>\n                    )\n                })\n            }\n        </ul>\n    )\n}\n\nTabList.propTypes = {\n    files: PropTypes.array,\n    activeId: PropTypes.string,\n    unsaveIds: PropTypes.array,\n    onTabClick: PropTypes.func,\n    onCloseTab: PropTypes.func\n}\n\nTabList.defaultProps = {\n    unsaveIds: []\n}\n\nexport default TabList","/Users/qiandingwei/Documents/projects/cloud-doc/src/utils/helper.js",[],"/Users/qiandingwei/Documents/projects/cloud-doc/src/utils/fileHelper.js",["95"],"const fs = window.require('fs').promises\nconst path = window.require('path')\n\nconst fileHelper = {\n    readFile: (path)=>{\n        return fs.readFile(path,{\n            encoding: 'utf-8'\n        })\n    },\n    writeFile: (path, content)=>{\n        return fs.writeFile(path, content,{encoding: 'utf-8'})\n    },\n    renameFile: (path, newPath)=>{\n        return fs.rename(path,newPath)\n    },\n    deleteFile: (path)=>{\n        return fs.unlink(path)\n    }\n}\n\nexport default fileHelper","/Users/qiandingwei/Documents/projects/cloud-doc/src/hooks/useContextMenu.js",["96","97"],"import { useState, useEffect, useRef } from \"react\";\n\nconst { remote } = window.require('electron')\n\nconst { Menu, MenuItem } = remote\n\nconst useContextMenu = (items, selector, deps)=>{\n    const clickElement = useRef(null)\n    useEffect(()=>{\n        const menu = new Menu();\n        items.forEach(item=>{\n            menu.append(new MenuItem(item))\n        })\n        const handleContextMenu = (e)=>{\n            if(document.querySelector(selector).contains(e.target)){\n                clickElement.current = e.target\n                menu.popup()\n            }\n        }\n        window.addEventListener('contextmenu',handleContextMenu)\n        return () => {\n            window.removeEventListener('contextmenu', handleContextMenu)\n        }\n    },[deps])\n    return clickElement\n}\n\nexport default useContextMenu","/Users/qiandingwei/Documents/projects/cloud-doc/src/hooks/useIpcRenderer.js",[],"/Users/qiandingwei/Documents/projects/cloud-doc/src/components/Loader/index.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":1,"column":27,"nodeType":"104","messageId":"105","endLine":1,"endColumn":36},{"ruleId":"102","severity":1,"message":"106","line":3,"column":32,"nodeType":"104","messageId":"105","endLine":3,"endColumn":38},{"ruleId":"102","severity":1,"message":"107","line":3,"column":9,"nodeType":"104","messageId":"105","endLine":3,"endColumn":15},{"ruleId":"102","severity":1,"message":"108","line":3,"column":26,"nodeType":"104","messageId":"105","endLine":3,"endColumn":33},{"ruleId":"109","severity":1,"message":"110","line":48,"column":5,"nodeType":"104","endLine":48,"endColumn":14,"suggestions":"111"},{"ruleId":"98","replacedBy":"112"},{"ruleId":"100","replacedBy":"113"},{"ruleId":"98","replacedBy":"114"},{"ruleId":"100","replacedBy":"115"},{"ruleId":"109","severity":1,"message":"116","line":22,"column":7,"nodeType":"117","endLine":22,"endColumn":9,"suggestions":"118"},{"ruleId":"102","severity":1,"message":"119","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":25},{"ruleId":"102","severity":1,"message":"103","line":1,"column":27,"nodeType":"104","messageId":"105","endLine":1,"endColumn":36},{"ruleId":"102","severity":1,"message":"120","line":1,"column":38,"nodeType":"104","messageId":"105","endLine":1,"endColumn":44},{"ruleId":"102","severity":1,"message":"107","line":3,"column":9,"nodeType":"104","messageId":"105","endLine":3,"endColumn":15},{"ruleId":"102","severity":1,"message":"108","line":3,"column":26,"nodeType":"104","messageId":"105","endLine":3,"endColumn":33},{"ruleId":"102","severity":1,"message":"121","line":6,"column":10,"nodeType":"104","messageId":"105","endLine":6,"endColumn":21},{"ruleId":"122","severity":1,"message":"123","line":32,"column":29,"nodeType":"124","endLine":32,"endColumn":65},{"ruleId":"102","severity":1,"message":"125","line":2,"column":7,"nodeType":"104","messageId":"105","endLine":2,"endColumn":11},{"ruleId":"102","severity":1,"message":"119","line":1,"column":10,"nodeType":"104","messageId":"105","endLine":1,"endColumn":18},{"ruleId":"109","severity":1,"message":"126","line":24,"column":7,"nodeType":"117","endLine":24,"endColumn":13,"suggestions":"127"},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'faSave' is defined but never used.","'faEdit' is defined but never used.","'faTrash' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setValue'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [files, enterPressed, editStatus, value, escPressed, onSaveEdit, closeSearch] as a second argument to the useEffect Hook.",["130"],["128"],["129"],["128"],["129"],"React Hook useEffect has missing dependencies: 'keyDownHandler' and 'keyUpHandler'. Either include them or remove the dependency array.","ArrayExpression",["131"],"'useState' is defined but never used.","'useRef' is defined but never used.","'useKeyPress' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'path' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'items' and 'selector'. Either include them or remove the dependency array.",["132"],"no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},"Add dependencies array: [files, enterPressed, editStatus, value, escPressed, onSaveEdit, closeSearch]",{"range":"139","text":"140"},"Update the dependencies array to be: [keyDownHandler, keyUpHandler]",{"range":"141","text":"142"},"Update the dependencies array to be: [deps, items, selector]",{"range":"143","text":"144"},[2015,2015],", [files, enterPressed, editStatus, value, escPressed, onSaveEdit, closeSearch]",[692,694],"[keyDownHandler, keyUpHandler]",[750,756],"[deps, items, selector]"]